解决冲突：就是把冲突的地方手动修改后再commit
通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。
如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。
下面我们实战一下--no-ff方式的git merge：
$ git checkout -b dev
$ git add readme.txt 
$ git commit -m "add merge"
$ git checkout master
准备合并dev分支，请注意--no-ff参数，表示禁用Fast forward：
$ git merge --no-ff -m "merge with no-ff" dev  //因为本次合并要创建一个新的commit，所以加上-m参数，把commit描述写进去
合并后，我们用git log看看分支历史：
$ git log --graph --pretty=oneline --abbrev-commit
合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。
